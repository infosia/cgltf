/**
 * vrm_types - VRM types generated by vrm_type_generator
 *
 * Distributed under the MIT License, see notice at the end of this file.
 *
 */

#ifndef CGLTF_VRM_TYPES_V1_0_H_INCLUDED__
#define CGLTF_VRM_TYPES_V1_0_H_INCLUDED__

#ifdef __cplusplus
extern "C" {
#endif

typedef enum cgltf_vrmc_vrm_blendshape_blendshapegroup_materialvalue_type_v1_0 {
	cgltf_vrmc_vrm_blendshape_blendshapegroup_materialvalue_type_v1_0_color,
	cgltf_vrmc_vrm_blendshape_blendshapegroup_materialvalue_type_v1_0_emissionColor,
	cgltf_vrmc_vrm_blendshape_blendshapegroup_materialvalue_type_v1_0_shadeColor,
	cgltf_vrmc_vrm_blendshape_blendshapegroup_materialvalue_type_v1_0_rimColor,
	cgltf_vrmc_vrm_blendshape_blendshapegroup_materialvalue_type_v1_0_outlineColor,
} cgltf_vrmc_vrm_blendshape_blendshapegroup_materialvalue_type_v1_0;

typedef enum cgltf_vrmc_vrm_blendshape_blendshapegroup_preset_v1_0 {
	cgltf_vrmc_vrm_blendshape_blendshapegroup_preset_v1_0_custom,
	cgltf_vrmc_vrm_blendshape_blendshapegroup_preset_v1_0_aa,
	cgltf_vrmc_vrm_blendshape_blendshapegroup_preset_v1_0_ih,
	cgltf_vrmc_vrm_blendshape_blendshapegroup_preset_v1_0_ou,
	cgltf_vrmc_vrm_blendshape_blendshapegroup_preset_v1_0_ee,
	cgltf_vrmc_vrm_blendshape_blendshapegroup_preset_v1_0_oh,
	cgltf_vrmc_vrm_blendshape_blendshapegroup_preset_v1_0_blink,
	cgltf_vrmc_vrm_blendshape_blendshapegroup_preset_v1_0_joy,
	cgltf_vrmc_vrm_blendshape_blendshapegroup_preset_v1_0_angry,
	cgltf_vrmc_vrm_blendshape_blendshapegroup_preset_v1_0_sorrow,
	cgltf_vrmc_vrm_blendshape_blendshapegroup_preset_v1_0_fun,
	cgltf_vrmc_vrm_blendshape_blendshapegroup_preset_v1_0_lookUp,
	cgltf_vrmc_vrm_blendshape_blendshapegroup_preset_v1_0_lookDown,
	cgltf_vrmc_vrm_blendshape_blendshapegroup_preset_v1_0_lookLeft,
	cgltf_vrmc_vrm_blendshape_blendshapegroup_preset_v1_0_lookRight,
	cgltf_vrmc_vrm_blendshape_blendshapegroup_preset_v1_0_blinkLeft,
	cgltf_vrmc_vrm_blendshape_blendshapegroup_preset_v1_0_blinkRight,
	cgltf_vrmc_vrm_blendshape_blendshapegroup_preset_v1_0_neutral,
} cgltf_vrmc_vrm_blendshape_blendshapegroup_preset_v1_0;

typedef enum cgltf_vrmc_vrm_firstperson_meshannotation_firstPersonType_v1_0 {
	cgltf_vrmc_vrm_firstperson_meshannotation_firstPersonType_v1_0_auto,
	cgltf_vrmc_vrm_firstperson_meshannotation_firstPersonType_v1_0_both,
	cgltf_vrmc_vrm_firstperson_meshannotation_firstPersonType_v1_0_thirdPersonOnly,
	cgltf_vrmc_vrm_firstperson_meshannotation_firstPersonType_v1_0_firstPersonOnly,
} cgltf_vrmc_vrm_firstperson_meshannotation_firstPersonType_v1_0;

typedef enum cgltf_vrmc_vrm_lookat_lookAtType_v1_0 {
	cgltf_vrmc_vrm_lookat_lookAtType_v1_0_bone,
	cgltf_vrmc_vrm_lookat_lookAtType_v1_0_blendShape,
} cgltf_vrmc_vrm_lookat_lookAtType_v1_0;

typedef enum cgltf_vrmc_vrm_meta_avatarPermission_v1_0 {
	cgltf_vrmc_vrm_meta_avatarPermission_v1_0_OnlyAuthor,
	cgltf_vrmc_vrm_meta_avatarPermission_v1_0_ExplicitlyLicensedPerson,
	cgltf_vrmc_vrm_meta_avatarPermission_v1_0_Everyone,
} cgltf_vrmc_vrm_meta_avatarPermission_v1_0;

typedef enum cgltf_vrmc_vrm_meta_commercialUsage_v1_0 {
	cgltf_vrmc_vrm_meta_commercialUsage_v1_0_PersonalNonCommercialNonProfit,
	cgltf_vrmc_vrm_meta_commercialUsage_v1_0_PersonalNonCommercialProfit,
	cgltf_vrmc_vrm_meta_commercialUsage_v1_0_PersonalCommercial,
	cgltf_vrmc_vrm_meta_commercialUsage_v1_0_Corporation,
} cgltf_vrmc_vrm_meta_commercialUsage_v1_0;

typedef enum cgltf_vrmc_vrm_meta_creditNotation_v1_0 {
	cgltf_vrmc_vrm_meta_creditNotation_v1_0_Required,
	cgltf_vrmc_vrm_meta_creditNotation_v1_0_Unnecessary,
	cgltf_vrmc_vrm_meta_creditNotation_v1_0_Abandoned,
} cgltf_vrmc_vrm_meta_creditNotation_v1_0;

typedef enum cgltf_vrmc_vrm_meta_modify_v1_0 {
	cgltf_vrmc_vrm_meta_modify_v1_0_Prohibited,
	cgltf_vrmc_vrm_meta_modify_v1_0_Inherited,
	cgltf_vrmc_vrm_meta_modify_v1_0_NotInherited,
} cgltf_vrmc_vrm_meta_modify_v1_0;
typedef struct cgltf_vrmc_vrm_springbone_collidergroup_collider_v1_0 {
	cgltf_float* offset;
	cgltf_size offset_count;
	cgltf_float radius;
} cgltf_vrmc_vrm_springbone_collidergroup_collider_v1_0;

typedef struct cgltf_vrmc_vrm_springbone_bonegroup_v1_0 {
	char* name;
	cgltf_float stiffness;
	cgltf_float gravityPower;
	cgltf_float* gravityDir;
	cgltf_size gravityDir_count;
	cgltf_float dragForce;
	cgltf_int center;
	cgltf_float hitRadius;
	cgltf_int* bones;
	cgltf_size bones_count;
	cgltf_int* colliderGroups;
	cgltf_size colliderGroups_count;
} cgltf_vrmc_vrm_springbone_bonegroup_v1_0;

typedef struct cgltf_vrmc_vrm_springbone_collidergroup_v1_0 {
	cgltf_int node;
	cgltf_vrmc_vrm_springbone_collidergroup_collider_v1_0* colliders;
	cgltf_size colliders_count;
} cgltf_vrmc_vrm_springbone_collidergroup_v1_0;

typedef struct cgltf_vrmc_vrm_springbone_v1_0 {
	cgltf_vrmc_vrm_springbone_bonegroup_v1_0* boneGroups;
	cgltf_size boneGroups_count;
	cgltf_vrmc_vrm_springbone_collidergroup_v1_0* colliderGroups;
	cgltf_size colliderGroups_count;
} cgltf_vrmc_vrm_springbone_v1_0;

typedef struct cgltf_vrmc_vrm_blendshape_blendshapegroup_blendshapebind_v1_0 {
	char* node;
	char* index;
	cgltf_float weight;
} cgltf_vrmc_vrm_blendshape_blendshapegroup_blendshapebind_v1_0;

typedef struct cgltf_vrmc_vrm_blendshape_blendshapegroup_materialuvbind_v1_0 {
	cgltf_int material;
	cgltf_float* scaling;
	cgltf_size scaling_count;
	cgltf_float* offset;
	cgltf_size offset_count;
} cgltf_vrmc_vrm_blendshape_blendshapegroup_materialuvbind_v1_0;

typedef struct cgltf_vrmc_vrm_blendshape_blendshapegroup_materialvalue_v1_0 {
	cgltf_int material;
	cgltf_vrmc_vrm_blendshape_blendshapegroup_materialvalue_type_v1_0 type;
	cgltf_float* targetValue;
	cgltf_size targetValue_count;
} cgltf_vrmc_vrm_blendshape_blendshapegroup_materialvalue_v1_0;

typedef struct cgltf_vrmc_vrm_blendshape_blendshapegroup_v1_0 {
	char* name;
	cgltf_vrmc_vrm_blendshape_blendshapegroup_preset_v1_0 preset;
	cgltf_vrmc_vrm_blendshape_blendshapegroup_blendshapebind_v1_0* binds;
	cgltf_size binds_count;
	cgltf_vrmc_vrm_blendshape_blendshapegroup_materialvalue_v1_0* materialValues;
	cgltf_size materialValues_count;
	cgltf_vrmc_vrm_blendshape_blendshapegroup_materialuvbind_v1_0* materialUVBinds;
	cgltf_size materialUVBinds_count;
	cgltf_bool isBinary;
	cgltf_bool ignoreBlink;
	cgltf_bool ignoreLookAt;
	cgltf_bool ignoreMouth;
} cgltf_vrmc_vrm_blendshape_blendshapegroup_v1_0;

typedef struct cgltf_vrmc_vrm_blendshape_v1_0 {
	cgltf_vrmc_vrm_blendshape_blendshapegroup_v1_0* blendShapeGroups;
	cgltf_size blendShapeGroups_count;
} cgltf_vrmc_vrm_blendshape_v1_0;

typedef struct cgltf_vrmc_vrm_constraint_v1_0 {
} cgltf_vrmc_vrm_constraint_v1_0;

typedef struct cgltf_vrmc_vrm_firstperson_meshannotation_v1_0 {
	char* node;
	cgltf_vrmc_vrm_firstperson_meshannotation_firstPersonType_v1_0 firstPersonType;
} cgltf_vrmc_vrm_firstperson_meshannotation_v1_0;

typedef struct cgltf_vrmc_vrm_firstperson_v1_0 {
	cgltf_vrmc_vrm_firstperson_meshannotation_v1_0* meshAnnotations;
	cgltf_size meshAnnotations_count;
} cgltf_vrmc_vrm_firstperson_v1_0;

typedef struct cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 {
	cgltf_int node;
} cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0;

typedef struct cgltf_vrmc_vrm_humanoid_humanbones_v1_0 {
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 hips;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 spine;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 chest;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 upperChest;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 neck;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 head;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 leftEye;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 rightEye;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 jaw;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 leftUpperLeg;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 leftLowerLeg;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 leftFoot;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 leftToes;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 rightUpperLeg;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 rightLowerLeg;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 rightFoot;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 rightToes;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 leftShoulder;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 leftUpperArm;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 leftLowerArm;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 leftHand;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 rightShoulder;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 rightUpperArm;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 rightLowerArm;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 rightHand;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 leftThumbProximal;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 leftThumbIntermediate;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 leftThumbDistal;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 leftIndexProximal;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 leftIndexIntermediate;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 leftIndexDistal;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 leftMiddleProximal;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 leftMiddleIntermediate;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 leftMiddleDistal;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 leftRingProximal;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 leftRingIntermediate;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 leftRingDistal;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 leftLittleProximal;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 leftLittleIntermediate;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 leftLittleDistal;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 rightThumbProximal;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 rightThumbIntermediate;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 rightThumbDistal;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 rightIndexProximal;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 rightIndexIntermediate;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 rightIndexDistal;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 rightMiddleProximal;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 rightMiddleIntermediate;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 rightMiddleDistal;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 rightRingProximal;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 rightRingIntermediate;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 rightRingDistal;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 rightLittleProximal;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 rightLittleIntermediate;
	cgltf_vrmc_vrm_humanoid_humanbones_humanbone_v1_0 rightLittleDistal;
} cgltf_vrmc_vrm_humanoid_humanbones_v1_0;

typedef struct cgltf_vrmc_vrm_humanoid_v1_0 {
	cgltf_vrmc_vrm_humanoid_humanbones_v1_0 humanBones;
} cgltf_vrmc_vrm_humanoid_v1_0;

typedef struct cgltf_vrmc_vrm_lookatrangemap_v1_0 {
	cgltf_float inputMaxValue;
	cgltf_float outputScale;
} cgltf_vrmc_vrm_lookatrangemap_v1_0;

typedef struct cgltf_vrmc_vrm_lookat_v1_0 {
	cgltf_float* offsetFromHeadBone;
	cgltf_size offsetFromHeadBone_count;
	cgltf_vrmc_vrm_lookat_lookAtType_v1_0 lookAtType;
	cgltf_vrmc_vrm_lookatrangemap_v1_0 lookAtHorizontalInner;
	cgltf_vrmc_vrm_lookatrangemap_v1_0 lookAtHorizontalOuter;
	cgltf_vrmc_vrm_lookatrangemap_v1_0 lookAtVerticalDown;
	cgltf_vrmc_vrm_lookatrangemap_v1_0 lookAtVerticalUp;
} cgltf_vrmc_vrm_lookat_v1_0;

typedef struct cgltf_vrmc_vrm_meta_v1_0 {
	char* name;
	char* version;
	char** authors;
	cgltf_size authors_count;
	char* copyrights;
	char* contactInformation;
	char* reference;
	cgltf_int thumbnailImage;
	cgltf_vrmc_vrm_meta_avatarPermission_v1_0 avatarPermission;
	cgltf_bool violentUsage;
	cgltf_bool sexualUsage;
	cgltf_bool gameUsage;
	cgltf_vrmc_vrm_meta_commercialUsage_v1_0 commercialUsage;
	cgltf_bool politicalOrReligiousUsage;
	char* otherPermissionUrl;
	cgltf_vrmc_vrm_meta_creditNotation_v1_0 creditNotation;
	cgltf_bool allowRedistribution;
	cgltf_vrmc_vrm_meta_modify_v1_0 modify;
	char* otherLicenseUrl;
} cgltf_vrmc_vrm_meta_v1_0;

typedef struct cgltf_vrmc_vrm_v1_0 {
	char* specVersion;
	cgltf_vrmc_vrm_meta_v1_0 meta;
	cgltf_vrmc_vrm_humanoid_v1_0 humanoid;
	cgltf_vrmc_vrm_firstperson_v1_0 firstPerson;
	cgltf_vrmc_vrm_lookat_v1_0 lookAt;
	cgltf_vrmc_vrm_blendshape_v1_0 blendShape;
} cgltf_vrmc_vrm_v1_0;

#ifdef __cplusplus
}
#endif

#endif /* #ifndef CGLTF_VRM_TYPES_V1_0_H_INCLUDED__ */

/* vrm_types is distributed under MIT license:
 *
 * Copyright (c) 2020 Kota Iguchi
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
